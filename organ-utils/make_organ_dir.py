#!/usr/bin/env python3

import argparse
from pathlib import Path
import sys
from yaml import dump
from datetime import date
from dataclasses import dataclass

def main():
    parser = argparse.ArgumentParser(formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument(
        '--target',
        type=dir_path,
        default=Path(__file__).parent.parent / 'context/app/organ',
        help='Target directory for markdown files')
    args = parser.parse_args()
    DirectoryWriter(args.target, [Organ(stem='heart', title='Heart')]).write()


@dataclass
class Organ:
    stem: str
    title: str

    def yaml_front_matter(self):
        data = {'title': self.title}
        return f'---\n{dump(data)}---\n\n'


def dir_path(s):
    path = Path(s)
    if path.is_dir():
        return path
    else:
        raise ValueError(f'"{s}" is not a directory')


class DirectoryWriter():
    def __init__(self, dir, organs):
        self.dir = dir
        self.organs = organs
    def write(self):
        readme_text = f'Generated by {Path(__file__).name} on {date.today()}.'
        (self.dir / 'README.txt').write_text(readme_text)
        for organ in self.organs:
            self._write_organ(organ)
    def _write_organ(self, organ):
        file = self.dir / f"{organ.stem}.md"
        print(f'Writing to {file}...')
        file.write_text(
            organ.yaml_front_matter()
            + 'TODO'
        )
        

if __name__ == "__main__":
    sys.exit(main())  # pragma: no cover
