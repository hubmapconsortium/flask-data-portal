{
	// Place your portal-ui workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Portal UI Test Imports": {
		"prefix": "puti",
		"body": [
			"$BLOCK_COMMENT_START eslint-disable import/no-unresolved $BLOCK_COMMENT_END",
			"import React from 'react';",
			"import { render, screen } from 'test-utils/functions';",
			"",
			"import ${TM_FILENAME/(.*)\\.(spec|test).js/$1/} from './${TM_FILENAME/(.*)\\.(spec|test).js/$1/}';",
			""
		],
		"description": "Basic imports needed for a javascript test"
	},
	"Import Styled Components": {
		"prefix": "isc",
		"body": [
			"import styled from 'styled-components';",

		],
		"description": "Import styled-components"
	},
	"Create Component Story Skeleton": {
		"prefix": "ccss",
		"body": [
			"import React from 'react';",
			"",
			"import ${TM_FILENAME/(.*)\\.(stories).js/$1/} from './${TM_FILENAME/(.*)\\.(stories).js/$1/}';",
			"",
			"export default {",
			"  title: '${TM_FILENAME/(.*)\\.(stories).js/$1/}',",
			"  component: ${TM_FILENAME/(.*)\\.(stories).js/$1/},",
			"};",
			"",
			"const Template = (args) => <${TM_FILENAME/(.*)\\.(stories).js/$1/} {...args} />;",
			"export const Default = Template.bind({});",
			"Default.args = {};",
			""
		],
		"description": "Create component story skeleton",
	}
}