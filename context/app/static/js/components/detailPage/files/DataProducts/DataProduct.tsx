import React from 'react';

import { Box, Typography } from '@mui/material';
import { FileIcon } from 'js/shared-styles/icons';
import StyledDetails from 'js/shared-styles/accordions/StyledDetails/StyledDetails';
import FilesConditionalLink from '../../BulkDataTransfer/FilesConditionalLink';

import { UnprocessedFile } from '../types';
import { useFilesContext } from '../FilesContext';
import { useFileLink } from './hooks';
import DownloadFileButton from './DownloadFileButton';
import { FileSize } from './FileSize';
import { PipelineInfo } from './PipelineInfo';

type DataProductProps = {
  file: UnprocessedFile;
};

export function DataProduct({ file }: DataProductProps) {
  const link = useFileLink(file);
  const { openDUA, hasAgreedToDUA } = useFilesContext();
  return (
    <Box key={file.rel_path} data-testid="data-product" sx={{ mt: 2, mb: 1 }}>
      <Box display="flex">
        <Box pl={4} pr={2}>
          <FileIcon
            sx={(theme) => ({
              color: theme.palette.primary.main,
            })}
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore - TODO: HMP-349 will let us set font sizes via `sx` or `fontSize` prop
            $fontSize="2.5rem"
          />
        </Box>
        <Box width="100%">
          <Box display="flex" justifyContent="space-between" alignItems="center" mb={0.5}>
            <div>
              <FilesConditionalLink
                openDUA={openDUA}
                hasAgreedToDUA={hasAgreedToDUA}
                href={link}
                underline="none"
                download
              >
                {file.rel_path}
              </FilesConditionalLink>
              <FileSize size={file.size} />
            </div>
            <DownloadFileButton file={file} />
          </Box>
          <Typography variant="body2">
            {file.description} (Format: {file.edam_term})
          </Typography>
          <StyledDetails summary="Additional Details">
            <Typography variant="subtitle2">Description</Typography>
            <Typography variant="body2">
              {file.mapped_description} (Format: {file.edam_term})
            </Typography>
            <Typography variant="subtitle2">Data Generation</Typography>
            <Typography variant="body2">
              Data was generated by <PipelineInfo />
            </Typography>
          </StyledDetails>
        </Box>
      </Box>
    </Box>
  );
}
