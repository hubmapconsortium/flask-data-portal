import React from 'react';

import { Box, Typography } from '@mui/material';
import { FileIcon } from 'js/shared-styles/icons';
import DetailAccordion from 'js/shared-styles/accordions/DetailsAccordion';
import FilesConditionalLink from 'js/components/detailPage/BulkDataTransfer/FilesConditionalLink';

import { UnprocessedFile } from '../types';
import { useFilesContext } from '../FilesContext';
import { useFileLink } from './hooks';
import DownloadFileButton from './DownloadFileButton';
import { FileSize } from './FileSize';
import { PipelineInfo } from './PipelineInfo';

interface DataProductProps {
  file: UnprocessedFile;
}

export function DataProduct({ file }: DataProductProps) {
  const link = useFileLink(file);
  const { openDUA, hasAgreedToDUA } = useFilesContext();
  return (
    <Box key={file.rel_path} data-testid="data-product" sx={{ py: 1.5 }}>
      <Box display="flex">
        <Box px={2.5}>
          <FileIcon
            sx={(theme) => ({
              color: theme.palette.primary.main,
              flexShrink: 0,
            })}
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore - TODO: HMP-349 will let us set font sizes via `sx` or `fontSize` prop
            $fontSize="1.5rem"
          />
        </Box>
        <Box width="100%">
          <Box display="flex" justifyContent="space-between" alignItems="center" mb={0.5}>
            <div>
              <FilesConditionalLink
                openDUA={openDUA}
                hasAgreedToDUA={hasAgreedToDUA}
                href={link}
                underline="none"
                download
                variant="subtitle1"
              >
                {file.rel_path}
              </FilesConditionalLink>
              <FileSize size={file.size} />
            </div>
            <DownloadFileButton file={file} />
          </Box>
          <Typography
            variant="body2"
            sx={{
              overflow: 'hidden',
              textOverflow: 'ellipsis',
              display: '-webkit-box',
              WebkitLineClamp: 1,
              WebkitBoxOrient: 'vertical',
            }}
          >
            {file.description} (Format: {file.edam_term})
          </Typography>
          <DetailAccordion summary="Additional Details">
            <Box component="dl" my={0}>
              <Typography variant="subtitle2" component="dt">
                Data Generation
              </Typography>
              <Typography variant="body2" component="dd">
                Data was generated by <PipelineInfo />
              </Typography>
            </Box>
          </DetailAccordion>
        </Box>
      </Box>
    </Box>
  );
}
