version: "3.7"

services:
  portal-ui:
    hostname: portal-ui
    container_name: portal-ui
    image: hubmap/portal-ui:latest
    # Mount the app config in container to keep it outside the image.
    volumes:
      - "../context/instance/app.conf:/app/instance/app.conf"
    # Avoid accidentally creating zombie processes
    init: true
    # Specifying a restart policy to avoid downtime
    restart: always
    networks:
      - gateway_hubmap
    # Send docker logs to AWS CloudWatch
    logging: 
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: portal-ui-docker-logs
        awslogs-stream: ${LOG_STREAM_STAGE}

  # Service names need to be kept in sync with gateway:
  # https://github.com/hubmapconsortium/gateway/blob/f2c2d5d/nginx/conf.d-stage/prod-portal-ui.conf
  # Some part of the routing seems to be be based on left substrings, rather than names, so make sure left substrings are unique.
  prod-portal-ui:
    hostname: prod-portal-ui
    container_name: prod-portal-ui
    image: hubmap/portal-ui:latest
    # Mount the app config in container to keep it outside the image.
    volumes:
      - "../context/instance/app.prod.conf:/app/instance/app.conf"
    # Avoid accidentally creating zombie processes
    init: true
    # Specifying a restart policy to avoid downtime
    restart: always
    networks:
      - gateway_hubmap
    # Send docker logs to AWS CloudWatch
    logging: 
      driver: awslogs
      options:
        awslogs-region: us-east-1
        awslogs-group: portal-ui-docker-logs
        awslogs-stream: ${LOG_STREAM_STAGE_PROD}

networks:
  # This is the network created by gateway to enable communicaton between multiple docker-compose projects
  gateway_hubmap:
    external: true
