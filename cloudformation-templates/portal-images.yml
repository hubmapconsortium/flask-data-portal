AWSTemplateFormatVersion: "2010-09-09"
Description: "Cloudfront/S3 Origin for Portal Images"

Resources:
  S3Bucket:
    DeletionPolicy: "Retain" # retain bucket if stack is deleted
    Properties:
      AccessControl: "Private"
      BucketName: !Sub "${AWS::StackName}-s3-origin"
    Type: "AWS::S3::Bucket"

  S3BucketPolicy:
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
            Resource:
              - !Sub "arn:aws:s3:::${S3Bucket}/*"
    Type: "AWS::S3::BucketPolicy"

  CloudFrontDistribution:
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          CachedMethods:
            - "HEAD"
            - "GET"
            - "OPTIONS"
          Compress: false
          ForwardedValues:
            Cookies:
              Forward: "none"
            Headers:
              - "Origin"
            QueryString: false
          MinTTL: 86400
          MaxTTL: 31536000
          DefaultTTL: 86400
          TargetOriginId: !Sub "s3-origin-${S3Bucket}"
          ViewerProtocolPolicy: "redirect-to-https"
          ResponseHeadersPolicyId: !GetAtt CloudFrontResponseHeadersPolicy.Id
        Enabled: true
        HttpVersion: "http2"
        IPV6Enabled: false
        Origins:
          - DomainName: !GetAtt S3Bucket.DomainName
            Id: !Sub "s3-origin-${S3Bucket}"
            OriginPath: ""
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}"
        PriceClass: "PriceClass_All"
    Type: "AWS::CloudFront::Distribution"

  CloudFrontOriginAccessIdentity:
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "Access S3 bucket content only through CloudFront"
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"

  CloudFrontResponseHeadersPolicy:
    Properties:
      ResponseHeadersPolicyConfig:
        Name: !Sub "${AWS::StackName}-response-headers-policy"
        CorsConfig:
          AccessControlAllowCredentials: false
          AccessControlAllowHeaders:
            Items:
              - "*"
          AccessControlAllowMethods: 
            Items: 
              - GET
              - HEAD
              - OPTIONS
          AccessControlAllowOrigins: 
            Items:
              - "*"
          AccessControlExposeHeaders: 
            Items: 
              - '*'
          OriginOverride: false
        CustomHeadersConfig:
          Items:
            - Header: "Cache-Control"
              Value: "max-age=1555200"
              Override: false # s3 cache control will override if present
    Type: AWS::CloudFront::ResponseHeadersPolicy

Outputs:
  S3BucketName:
    Description: "S3 Bucket name"
    Value: !Ref S3Bucket
  CloudFrontDistributionID:
    Description: "CloudFront distribution ID"
    Value: !Ref CloudFrontDistribution
  CloudFrontDistributionDomainName:
    Description: "CloudFront distribution domain name"
    Value: !GetAtt CloudFrontDistribution.DomainName
